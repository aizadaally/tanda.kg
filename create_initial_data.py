#!/usr/bin/env python
"""
Script to create initial data for Tanda.kg
Run this after migrations: python create_initial_data.py
"""

import os
import sys
import django

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tanda_project.settings')
django.setup()

from django.contrib.auth.models import User
from products.models import Category
from users.models import Producer


def create_categories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫—ã—Ä–≥—ã–∑—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è"""
    categories = [
        {'name': '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', 'slug': 'dairy', 'icon': 'cup-hot', 'description': '–ö—É—Ä—É—Ç, –∞–π—Ä–∞–Ω, —Å–º–µ—Ç–∞–Ω–∞, —Ç–≤–æ—Ä–æ–≥'},
        {'name': '–ú—ë–¥ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã –ø—á–µ–ª–æ–≤–æ–¥—Å—Ç–≤–∞', 'slug': 'honey', 'icon': 'droplet', 'description': '–ì–æ—Ä–Ω—ã–π –º—ë–¥, –ø—Ä–æ–ø–æ–ª–∏—Å, –≤–æ—Å–∫'},
        {'name': '–ú—è—Å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è', 'slug': 'meat', 'icon': 'egg-fried', 'description': '–ß—É—á—É–∫, –∫–∞–∑—ã, –±–∞—Å—Ç—É—Ä–º–∞'},
        {'name': '–ö–æ–Ω—Å–µ—Ä–≤—ã –∏ —Å–æ–ª–µ–Ω—å—è', 'slug': 'preserves', 'icon': 'jar', 'description': '–í–∞—Ä–µ–Ω—å–µ, –∫–æ–º–ø–æ—Ç—ã, —Å–æ–ª–µ–Ω—å—è'},
        {'name': '–ö—Ä—É–ø—ã –∏ –º—É–∫–∞', 'slug': 'grains', 'icon': 'basket3', 'description': '–ú—É–∫–∞, –∫—Ä—É–ø—ã, –∑–µ—Ä–Ω–æ–≤—ã–µ'},
        {'name': '–û—Ä–µ—Ö–∏ –∏ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã', 'slug': 'nuts-dried', 'icon': 'tree', 'description': '–ì—Ä–µ—Ü–∫–∏–µ –æ—Ä–µ—Ö–∏, –∫—É—Ä–∞–≥–∞, –∏–∑—é–º'},
        {'name': '–¢—Ä–∞–≤—è–Ω—ã–µ —á–∞–∏', 'slug': 'herbal-tea', 'icon': 'cup-straw', 'description': '–ì–æ—Ä–Ω—ã–µ —Ç—Ä–∞–≤—ã, –ª–µ—á–µ–±–Ω—ã–µ —Å–±–æ—Ä—ã'},
        {'name': '–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è', 'slug': 'bakery', 'icon': 'cake2', 'description': '–õ–µ–ø—ë—à–∫–∏, —Å–∞–º—Å–∞, —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –≤—ã–ø–µ—á–∫–∞'},
        {'name': '–°–ª–∞–¥–æ—Å—Ç–∏', 'slug': 'sweets', 'icon': 'candy', 'description': '–ß–∞–∫-—á–∞–∫, —Ö–∞–ª–≤–∞, –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–ª–∞–¥–æ—Å—Ç–∏'},
        {'name': '–ù–∞–ø–∏—Ç–∫–∏', 'slug': 'drinks', 'icon': 'bottle', 'description': '–ú–∞–∫—Å—ã–º, –∫—ã–º—ã–∑, —Å–æ–∫–∏'},
    ]
    
    for cat_data in categories:
        category, created = Category.objects.get_or_create(
            slug=cat_data['slug'],
            defaults={
                'name': cat_data['name'],
                'icon': cat_data['icon'],
                'description': cat_data['description']
            }
        )
        if created:
            print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name}")
        else:
            print(f"‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {category.name}")


def create_admin_user():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    if not User.objects.filter(username='admin').exists():
        admin = User.objects.create_superuser(
            username='admin',
            email='admin@tanda.kg',
            password='admin123',
            first_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            last_name='Tanda.kg'
        )
        print(f"‚úì –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin.username}")
    else:
        print("‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")


def create_sample_users():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    sample_users = [
        {
            'username': 'producer1',
            'email': 'producer1@example.com',
            'first_name': '–ê–π–≥—É–ª—å',
            'last_name': '–ë–µ–∫–æ–≤–∞',
            'password': 'password123'
        },
        {
            'username': 'producer2',
            'email': 'producer2@example.com',
            'first_name': '–ú–∞—Ä–∞—Ç',
            'last_name': '–¢–æ–∫—Ç–æ–≥—É–ª–æ–≤',
            'password': 'password123'
        },
        {
            'username': 'buyer1',
            'email': 'buyer1@example.com',
            'first_name': '–ñ–∞–º–∏–ª—è',
            'last_name': '–°–∞–¥—ã–∫–æ–≤–∞',
            'password': 'password123'
        }
    ]
    
    for user_data in sample_users:
        if not User.objects.filter(username=user_data['username']).exists():
            user = User.objects.create_user(**user_data)
            print(f"‚úì –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        else:
            print(f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {user_data['username']}")


def create_sample_producers():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π"""
    producers_data = [
        {
            'username': 'producer1',
            'name': '–ö—ã—Ä–≥—ã–∑ –ë–æ–∑ –£–π',
            'description': '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –∫—ã—Ä–≥—ã–∑—Å–∫–∏–µ –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã. –ò–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—É—Ç, –∞–π—Ä–∞–Ω, —Å–º–µ—Ç–∞–Ω—É –ø–æ —Å—Ç–∞—Ä–∏–Ω–Ω—ã–º —Ä–µ—Ü–µ–ø—Ç–∞–º.',
            'region': 'bishkek',
            'is_verified': True
        },
        {
            'username': 'producer2',
            'name': '–¢–∞–ª–∞—Å –ú—ë–¥',
            'description': '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –º—ë–¥ —Å –ø–∞—Å–µ–∫ –¢–∞–ª–∞—Å—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. –ì–æ—Ä–Ω—ã–π –º—ë–¥ –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞.',
            'region': 'talas',
            'is_verified': True
        }
    ]
    
    for prod_data in producers_data:
        try:
            user = User.objects.get(username=prod_data['username'])
            if not hasattr(user, 'producer'):
                producer = Producer.objects.create(
                    user=user,
                    name=prod_data['name'],
                    description=prod_data['description'],
                    region=prod_data['region'],
                    is_verified=prod_data['is_verified']
                )
                print(f"‚úì –°–æ–∑–¥–∞–Ω –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: {producer.name}")
            else:
                print(f"‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {user.username}")
        except User.DoesNotExist:
            print(f"‚úó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {prod_data['username']} –Ω–µ –Ω–∞–π–¥–µ–Ω")


def create_sample_products():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è"""
    from products.models import Product, Category
    
    sample_products = [
        {
            'producer': 'producer1',  # –ö—ã—Ä–≥—ã–∑ –ë–æ–∑ –£–π
            'category': 'dairy',
            'name': '–ö—É—Ä—É—Ç –¥–æ–º–∞—à–Ω–∏–π',
            'description': '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –∫—ã—Ä–≥—ã–∑—Å–∫–∏–π –∫—É—Ä—É—Ç, –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –ø–æ —Å—Ç–∞—Ä–∏–Ω–Ω—ã–º —Ä–µ—Ü–µ–ø—Ç–∞–º –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –º–æ–ª–æ–∫–∞. –ë–æ–≥–∞—Ç –±–µ–ª–∫–æ–º –∏ –∫–∞–ª—å—Ü–∏–µ–º.',
            'price': 150,
        },
        {
            'producer': 'producer1',
            'category': 'dairy', 
            'name': '–ê–π—Ä–∞–Ω —Å–≤–µ–∂–∏–π',
            'description': '–û—Å–≤–µ–∂–∞—é—â–∏–π –∫—ã—Ä–≥—ã–∑—Å–∫–∏–π –∞–π—Ä–∞–Ω –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –º–æ–ª–æ–∫–∞. –ò–¥–µ–∞–ª—å–Ω–æ —É—Ç–æ–ª—è–µ—Ç –∂–∞–∂–¥—É –≤ –∂–∞—Ä–∫–∏–π –¥–µ–Ω—å.',
            'price': 80,
        },
        {
            'producer': 'producer2',  # –¢–∞–ª–∞—Å –ú—ë–¥
            'category': 'honey',
            'name': '–ú—ë–¥ –≥–æ—Ä–Ω—ã–π –¢–∞–ª–∞—Å—Å–∫–∏–π',
            'description': '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –º—ë–¥ —Å –≤—ã—Å–æ–∫–æ–≥–æ—Ä–Ω—ã—Ö –ø–∞—Å–µ–∫ –¢–∞–ª–∞—Å—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. –°–æ–±—Ä–∞–Ω —Å –∞–ª—å–ø–∏–π—Å–∫–∏—Ö —Ç—Ä–∞–≤ –∏ —Ü–≤–µ—Ç–æ–≤.',
            'price': 500,
        },
        {
            'producer': 'producer2',
            'category': 'honey',
            'name': '–ü—Ä–æ–ø–æ–ª–∏—Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π',
            'description': '–õ–µ—á–µ–±–Ω—ã–π –ø—Ä–æ–ø–æ–ª–∏—Å –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. –£–∫—Ä–µ–ø–ª—è–µ—Ç –∏–º–º—É–Ω–∏—Ç–µ—Ç –∏ –æ–±–ª–∞–¥–∞–µ—Ç –∞–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏.',
            'price': 300,
        },
        {
            'producer': 'producer1',
            'category': 'meat',
            'name': '–ß—É—á—É–∫ –¥–æ–º–∞—à–Ω–∏–π',
            'description': '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∫—ã—Ä–≥—ã–∑—Å–∫–∞—è –∫–æ–ª–±–∞—Å–∞ –∏–∑ –∫–æ–Ω–∏–Ω—ã, –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–∞—è –ø–æ —Å–µ–º–µ–π–Ω–æ–º—É —Ä–µ—Ü–µ–ø—Ç—É.',
            'price': 800,
        },
        {
            'producer': 'producer2',
            'category': 'nuts-dried',
            'name': '–ì—Ä–µ—Ü–∫–∏–µ –æ—Ä–µ—Ö–∏ –ê—Ä—Å–ª–∞–Ω–±–æ–±',
            'description': '–û—Ç–±–æ—Ä–Ω—ã–µ –≥—Ä–µ—Ü–∫–∏–µ –æ—Ä–µ—Ö–∏ –∏–∑ –∑–Ω–∞–º–µ–Ω–∏—Ç—ã—Ö –æ—Ä–µ—Ö–æ–≤—ã—Ö –ª–µ—Å–æ–≤ –ê—Ä—Å–ª–∞–Ω–±–æ–±–∞.',
            'price': 400,
        }
    ]
    
    for product_data in sample_products:
        try:
            # Get producer
            from users.models import Producer
            from django.contrib.auth.models import User
            user = User.objects.get(username=product_data['producer'])
            producer = user.producer
            
            # Get category
            category = Category.objects.get(slug=product_data['category'])
            
            # Create product if it doesn't exist
            product, created = Product.objects.get_or_create(
                name=product_data['name'],
                producer=producer,
                defaults={
                    'category': category,
                    'description': product_data['description'],
                    'price': product_data['price'],
                    'is_active': True,
                    'num_sales': 0,
                }
            )
            
            if created:
                print(f"‚úì –°–æ–∑–¥–∞–Ω –ø—Ä–æ–¥—É–∫—Ç: {product.name}")
            else:
                print(f"‚Ä¢ –ü—Ä–æ–¥—É–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {product.name}")
                
        except Exception as e:
            print(f"‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ {product_data['name']}: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Tanda.kg...")
    print()
    
    print("üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫—ã—Ä–≥—ã–∑—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤...")
    create_categories()
    print()
    
    print("üë®‚Äçüíº –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    create_admin_user()
    print()
    
    print("üë• –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    create_sample_users()
    print()
    
    print("üè≠ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π...")
    create_sample_producers()
    print()
    
    print("üçØ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è...")
    create_sample_products()
    print()
    
    print("‚úÖ –ì–æ—Ç–æ–≤–æ! –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã.")
    print()
    print("üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
    print("   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - admin:admin123")
    print("   –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å 1 - producer1:password123 (–ö—ã—Ä–≥—ã–∑ –ë–æ–∑ –£–π)")
    print("   –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å 2 - producer2:password123 (–¢–∞–ª–∞—Å –ú—ë–¥)")
    print("   –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - buyer1:password123")
    print()
    print("üåê –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")


if __name__ == '__main__':
    main()